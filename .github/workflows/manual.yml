name: Release
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Major, minor, patch?'
        default: 'patch'
        required: true
        type: string
jobs:
  lint_test_build:
    name: Lint, test and build
    runs-on: ubuntu-latest
    steps:
      - run: echo "Lint, test and build"

  calculate_next_version:
    name: Calculate next version
    runs-on: ubuntu-latest
    outputs:
      next_version: $ {{ steps.bump_version.outputs.NEXT_VERSION }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Get latest tag
      run: | 
        LATEST_TAG=$(git describe --tags --match "v*" --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

    - name: Remove v prefix
      run: |    
        VERSION=$(echo "$LATEST_TAG" | sed 's/v//')
        echo "VERSION=$VERSION" >>  $GITHUB_ENV

    - name: Bump version
      id: bump_version
      run: |
        MAJOR=$(echo "$VERSION" | cut -d. -f1)
        MINOR=$(echo "$VERSION" | cut -d. -f2)
        PATCH=$(echo "$VERSION" | cut -d. -f3)
        if [ "${{ inputs.name }}" == "major" ]; then
          MAJOR=$((MAJOR+1))
          MINOR=0
          PATCH=0
        elif [ "${{ inputs.name }}" == "minor" ]; then 
          MINOR=$((MINOR+1))
          PATCH=0
        elif [ "${{ inputs.name }}" == "patch" ]; then
          PATCH=$((PATCH+1))
        fi
        echo "NEXT_VERSION=$MAJOR.$MINOR.$PATCH" >> $GITHUB_ENV

    - name: Print new version
      run: echo "$NEXT_VERSION"
    
  update_csproj:
      name: Update .csproj
      runs-on: ubuntu-latest
      needs: [lint_test_build, calculate_next_version]
      steps:
          - run: echo "Update .csproj"

  merge_to_prod:
      name: Merge to prod
      runs-on: ubuntu-latest
      needs: [update_csproj]
      steps:
          - run: echo "Update .csproj"

  deploy:
      name: Deploy to prod
      runs-on: ubuntu-latest
      needs: [merge_to_prod]
      steps:
          - run: echo "Deploy"

  create_release_and_tag:
      name: Create release tag
      runs-on: ubuntu-latest
      needs: [deploy]
      permissions:
        contents: write
      steps:
        - uses: actions/checkout@v4
        - run: gh release create "v${{ needs.bump_version.outputs.next_version }}" --generate-notes
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
